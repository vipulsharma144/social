// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema
// and at https://www.prisma.io/docs/concepts/components/prisma-schema/data-model

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["interactiveTransactions"]
}

//datasource db {
//  provider = "postgresql"
//  url      = env("DATABASE_URL")
//}

//datasource db {
//  provider = "sqlite"
//  url      = "file:../dev.db"
//}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  email     String    @unique
  name      String?
  posts     Post[]
  todos     Todo[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  password  String
  Comment   Comment[]
}

model Post {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  title     String
  content   String?
  published Boolean   @default(false)
  author    User      @relation(fields: [authorId], references: [id])
  authorId  String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  comments  Comment[]
}

model Todo {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  title     String
  owner     User     @relation(fields: [userId], references: [id])
  userId    String
  completed Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Comment {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  text      String
  author    User     @relation(fields: [authorId], references: [id])
  authorId  String
  post      Post     @relation(fields: [postId], references: [id])
  postId    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
